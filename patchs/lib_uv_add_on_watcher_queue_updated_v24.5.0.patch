diff --git a/deps/uv/include/uv.h b/deps/uv/include/uv.h
index 606083c87d..ca9568c58b 100644
--- a/deps/uv/include/uv.h
+++ b/deps/uv/include/uv.h
@@ -1934,6 +1934,8 @@ union uv_any_req {
 struct uv_loop_s {
   /* User data - use this for whatever. */
   void* data;
+  /* Callback when loop's watcher queue updates. */
+  void (*on_watcher_queue_updated)(uv_loop_t*);
   /* Loop reference counting. */
   unsigned int active_handles;
   struct uv__queue handle_queue;
diff --git a/deps/uv/src/unix/core.c b/deps/uv/src/unix/core.c
index 71e9c525c4..a642529408 100644
--- a/deps/uv/src/unix/core.c
+++ b/deps/uv/src/unix/core.c
@@ -937,8 +937,11 @@ void uv__io_start(uv_loop_t* loop, uv__io_t* w, unsigned int events) {
     return 0;
 #endif
 
-  if (uv__queue_empty(&w->watcher_queue))
+  if (uv__queue_empty(&w->watcher_queue)) {
     uv__queue_insert_tail(&loop->watcher_queue, &w->watcher_queue);
+    if (loop->on_watcher_queue_updated)
+      loop->on_watcher_queue_updated(loop);
+  }
 
   if (loop->watchers[w->fd] == NULL) {
     loop->watchers[w->fd] = w;
@@ -995,8 +998,11 @@ void uv__io_stop(uv_loop_t* loop, uv__io_t* w, unsigned int events) {
       loop->nfds--;
     }
   }
-  else if (uv__queue_empty(&w->watcher_queue))
+  else if (uv__queue_empty(&w->watcher_queue)) {
     uv__queue_insert_tail(&loop->watcher_queue, &w->watcher_queue);
+    if (loop->on_watcher_queue_updated)
+      loop->on_watcher_queue_updated(loop);
+  }
 }
 
 
@@ -1015,6 +1021,8 @@ void uv__io_close(uv_loop_t* loop, uv__io_t* w) {
 void uv__io_feed(uv_loop_t* loop, uv__io_t* w) {
   if (uv__queue_empty(&w->pending_queue))
     uv__queue_insert_tail(&loop->pending_queue, &w->pending_queue);
+  if (loop->on_watcher_queue_updated)
+    loop->on_watcher_queue_updated(loop);
 }


